StoneScript {

  Tablet = Program
  Program = Statement*
  Statement = Conditional
            | Loops
            | Declaration
            | Assignment
            | Calls
  Declaration = "ROCK" id "IS" FuncOrExp "\n"
  Assignment = id "IS" FuncOrExp
  Calls = id "(" Primary ")"
  FuncOrExp = Func | Exp1
  
  Func = "(" id ")" "PART" Program "NOT PART"
  
  Exp1         =  Exp2 (relop Exp2)?
  Exp2         =  Exp3 (shiftop Exp2)*
  Exp3         =  Exp4 (addop Exp4)*
  Exp4         =  Exp5 (mulop Exp5)*
  Exp5         =  Primary
  Primary      =  Literal
  Literal      =  "nothing"
               |  "OOGA"
               |  "NOOGA"
  ExpList      =  Exp ("," Exp)*
  for          = "FOR" LoopContainer "PART" body "NOT PART"
  LoopContainer = "(" setup "," relop "," incop ")"
  setup         = Declaration | 
  while         = "WHILE" conditional "PART" body "NOTPART"
  keyword     =  ("YESNOS" | "OOF" | "OTHER"
              |  "FOR"  | "GIVE" 
              |  "WHAT" | "WHILE" | "OOGA" | "WORDERS"
              | "NOOGA" | "SPEAK") ~idrest
  id          =  ~keyword letter idrest*
  addop       =  "SQUISH" | "RIP"
  relop       =  "NOT SMASH OR IS" | "NOT SMASH" | "IS IS" | "NOT IS" | "SMASH OR IS" | "SMASH"
  mulop       =  "MANY" | "BREAK" | "LEFT"
  incop       =  "LITTLE SQUISH" | "LITTLE RIP"
  primtype    =  "YESNOS" | "COUNTERS" | "WONDERS" | "WHAT"

  space      :=  "\x20" | "\x09" | "\x0A" | "\x0D" | comment
  comment     =  "//" (~"\n" any)* "\n"
}
